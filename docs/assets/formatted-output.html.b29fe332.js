import{r,o as d,c as i,a as t,d as a,w as o,F as l,b as e,e as s}from"./app.88d1a4f1.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const u={},p=t("h1",{id:"formatted-output-json-yaml",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#formatted-output-json-yaml","aria-hidden":"true"},"#"),e(" Formatted output (json/yaml)")],-1),m=t("code",null,"vcn",-1),h=e(" can output results in "),b=t("code",null,"json",-1),x=e(" or "),_=t("code",null,"yaml",-1),g=e(" formats by using the "),v=e("--output global flag"),f=e("."),y=s(`<blockquote><p>Although all commands support <code>--output</code>, some could return an empty results (ie. <code>vcn login</code>, <code>vcn logout</code>, and <code>vcn dashboard</code>).</p></blockquote><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>vcn authenticate docker://nginx --output yaml
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>vcn list --output json
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>vcn notarize file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,5),q=e("You need to set "),j=t("code",null,"VCN_NOTARIZATION_PASSWORD",-1),k=e(),w=e("environment variable"),S=e(" to make "),N=t("code",null,"vcn",-1),E=e(" work in non-interactive mode"),V=s(`<h2 id="dealing-with-errors" tabindex="-1"><a class="header-anchor" href="#dealing-with-errors" aria-hidden="true">#</a> Dealing with errors</h2><p>When an error is encountered, <code>vcn</code> will print the usual error message to the <em>Standard error</em> but also will return an error object (formatted accordingly to <code>--output</code>) to the <em>Standard output</em>.</p><h3 id="example-of-mixed-standard-error-and-standard-output" tabindex="-1"><a class="header-anchor" href="#example-of-mixed-standard-error-and-standard-output" aria-hidden="true">#</a> Example of mixed <em>Standard error</em> and <em>Standard output</em></h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ vcn authenticate non-existing.txt --output json
Error: open non-existing.txt: no such file or directory
{
  &quot;error&quot;: &quot;open non-existing.txt: no such file or directory&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="example-of-redirecting-the-standard-output-to-get-the-formatted-result" tabindex="-1"><a class="header-anchor" href="#example-of-redirecting-the-standard-output-to-get-the-formatted-result" aria-hidden="true">#</a> Example of redirecting the <em>Standard output</em> to get the formatted result</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ vcn authenticate non-existing.txt --output json &gt; output.json
Error: open non-existing.txt: no such file or directory

$ cat output.json
{
  &quot;error&quot;: &quot;open non-existing.txt: no such file or directory&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,6);function A(O,R){const n=r("RouterLink");return d(),i(l,null,[p,t("p",null,[m,h,b,x,_,g,a(n,{to:"/vcn/cmd/vcn.html#options"},{default:o(()=>[v]),_:1}),f]),y,t("blockquote",null,[t("p",null,[q,j,k,a(n,{to:"/vcn/user-guide/environments.html#other-environment-variables"},{default:o(()=>[w]),_:1}),S,N,E])]),V],64)}var F=c(u,[["render",A]]);export{F as default};
