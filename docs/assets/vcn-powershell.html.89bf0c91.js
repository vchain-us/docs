import{r as a,o as i,c,a as e,d as n,F as l,b as t,e as r}from"./app.88d1a4f1.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const h={},d=e("h1",{id:"vcn-powershell",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vcn-powershell","aria-hidden":"true"},"#"),t(" vcn-powershell")],-1),u={href:"https://github.com/vchain-us/vcn-powershell",target:"_blank",rel:"noopener noreferrer"},p=t("PowerShell Scripts for Codenotary vcn"),f=e("h2",{id:"vcn-folder-watch-ps",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vcn-folder-watch-ps","aria-hidden":"true"},"#"),t(" vcn-folder-watch.ps")],-1),_=t("That Powershell script watches a defined directory on your system and notarizes files that are stored here using your "),w={href:"https://dashboard.codenotary.io/auth/signup",target:"_blank",rel:"noopener noreferrer"},v=t("Codenotary.io account "),y=t("Make sure to download the vcn binary as well: "),m={href:"https://github.com/vchain-us/vcn/releases/latest",target:"_blank",rel:"noopener noreferrer"},b=t("Codenotary vcn cli"),C=r('<p>You only need to change the variables in the beginning of the script according to your environment:</p><ul><li>$vcnpath</li><li>$watcher.Path</li><li>$watcher.IncludeSubdirectories</li></ul><h3 id="run-the-script-fully-automated" tabindex="-1"><a class="header-anchor" href="#run-the-script-fully-automated" aria-hidden="true">#</a> run the script fully automated</h3><p>If you want to fully automated, please set the following environment variables:</p><ul><li>VCN_USER</li><li>VCN_PASSWORD</li><li>VCN_NOTARIZATION_PASSWORD</li></ul>',5),g=t("You can learn more about that here: "),k={href:"https://docs.codenotary.io/vcn/user-guide/environments.html",target:"_blank",rel:"noopener noreferrer"},x=t("Codenotary vcn environment"),N=r('<h2 id="vcn-folder-workflow-ps1" tabindex="-1"><a class="header-anchor" href="#vcn-folder-workflow-ps1" aria-hidden="true">#</a> vcn-folder-workflow.ps1</h2><p>extension of vcn-folder-watch.ps to support a simple trust workflow, when files are created or moved into the specific folder. Only the last notarization action counts.</p><ul><li>All newly created files in C:\\Codenotary\\Production will be trusted</li><li>All newly created files in C:\\Codenotary\\Old will be untrusted</li><li>All newly created files in C:\\Codenotary\\Unwanted will be unsupported</li></ul><h2 id="function-get-cnauthenticate-ps1" tabindex="-1"><a class="header-anchor" href="#function-get-cnauthenticate-ps1" aria-hidden="true">#</a> function-Get-CNAuthenticate.ps1</h2><p>Get-Function to authenticate an existing file with Codenotary.io and return the result as json</p><p>Load the function in your PowerShell session <code>. .\\function-Get-CNAuthenticate.ps1</code></p><p>Authenticate file <code>get-item .\\codenotary-watcher.ps1 | Get-CNAuthenticate</code></p><p>Check verification status <code>Get-CNAuthenticate -Path .\\codenotary-watcher.ps1 | select -ExpandProperty verification</code></p>',8);function A(P,S){const o=a("ExternalLinkIcon");return i(),c(l,null,[d,e("p",null,[e("a",u,[p,n(o)])]),f,e("p",null,[_,e("a",w,[v,n(o)])]),e("p",null,[y,e("a",m,[b,n(o)])]),C,e("p",null,[g,e("a",k,[x,n(o)])]),N],64)}var O=s(h,[["render",A]]);export{O as default};
