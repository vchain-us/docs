import{r as o,o as c,c as r,a as n,d as a,F as i,b as s,e as t}from"./app.0a892dac.js";import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";const l={},u=n("h1",{id:"verify-commit-github-action",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#verify-commit-github-action","aria-hidden":"true"},"#"),s(" Verify commit GitHub action")],-1),h=s("A GitHub action to verify the authenticity of your commits with "),d={href:"https://codenotary.io",target:"_blank",rel:"noopener noreferrer"},k=s("Codenotary.io"),m=s("You can sign your work locally using the Codenotary "),b={href:"https://github.com/vchain-us/vcn",target:"_blank",rel:"noopener noreferrer"},_=s("vcn"),y=s(" tool (ie. "),g=n("code",null,"vcn notarize git://.",-1),f=s("). This action will verify these signatures so other people will know that your commits come from a trusted source."),v=n("img",{width:"50%",src:"https://raw.githubusercontent.com/vchain-us/verify-action/master/docs/commit-check.png"},null,-1),x=n("h1",{id:"usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#usage","aria-hidden":"true"},"#"),s(" Usage")],-1),w=s("Create a workflow "),I=n("code",null,".yml",-1),C=s(" file in your repositories "),D=n("code",null,".github/workflows",-1),V=s(" directory (eg. "),E=n("code",null,".github/workflows/verify.yml",-1),L=s("). In your workflow you first need to checkout your repository then use this "),N={href:"https://github.com/vchain-us/verify-action",target:"_blank",rel:"noopener noreferrer"},A=s("action"),S=s(":"),G=t(`<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Codenotary

<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">]</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">check</span><span class="token punctuation">:</span>

    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
     <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout
       <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master
     
     <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Verify
       <span class="token key atrule">uses</span><span class="token punctuation">:</span> vchain<span class="token punctuation">-</span>us/verify<span class="token punctuation">-</span>action@master
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,1),z=s("For more details, see "),B={href:"https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"},F=s("Contexts and expression syntax for GitHub Actions"),H=t(`<h2 id="inputs" tabindex="-1"><a class="header-anchor" href="#inputs" aria-hidden="true">#</a> Inputs</h2><p>See <a href="action.yml">action.yml</a>.</p><p>Available inputs</p><ul><li><code>signerID</code> - List of SignerID(s) (separated by space) to authenticate against. A SignerID is the signer&#39;s public address (represented as a 40 hex characters long string prefixed with <code>0x</code>).</li><li><code>org</code> - Organization&#39;s ID to authenticate against. Note that <code>org</code> takes precedence over <code>signerID</code></li><li><code>path</code> - Path to git working directory. Default to the current directory.</li></ul><p>Example:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>     <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Verify
       <span class="token key atrule">uses</span><span class="token punctuation">:</span> vchain<span class="token punctuation">-</span>us/verify<span class="token punctuation">-</span>action@master
       <span class="token key atrule">with</span><span class="token punctuation">:</span>
         <span class="token key atrule">signerID</span><span class="token punctuation">:</span> &lt;a trusted signer ID<span class="token punctuation">&gt;</span>
         <span class="token key atrule">org</span><span class="token punctuation">:</span> &lt;a trusted organization<span class="token punctuation">&gt;</span>
         <span class="token key atrule">path</span><span class="token punctuation">:</span> &lt;path to your repository<span class="token punctuation">,</span> if not the current directory<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="license" tabindex="-1"><a class="header-anchor" href="#license" aria-hidden="true">#</a> License</h1>`,7),P={href:"https://github.com/vchain-us/verify-action/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},T=s("GPL-3.0");function j(q,O){const e=o("ExternalLinkIcon");return c(),r(i,null,[u,n("blockquote",null,[n("p",null,[h,n("a",d,[k,a(e)])])]),n("p",null,[m,n("a",b,[_,a(e)]),y,g,f]),v,x,n("p",null,[w,I,C,D,V,E,L,n("a",N,[A,a(e)]),S]),G,n("p",null,[z,n("a",B,[F,a(e)])]),H,n("p",null,[n("a",P,[T,a(e)])])],64)}var J=p(l,[["render",j]]);export{J as default};
